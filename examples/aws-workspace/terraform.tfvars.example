### General
prefix = "myproject"

### Databricks
databricks_account_id    = "12345678-1234-1234-1234-123456789012"
databricks_client_id     = "12345678-1234-1234-1234-123456789012"
databricks_client_secret = "your-client-secret"
workspace_name           = "myproject-workspace" # Optional, defaults to "${prefix}-workspace"
pricing_tier             = "ENTERPRISE" # Optional, defaults to "ENTERPRISE"

### AWS
region     = "us-west-2"
# aws_role_arn = "arn:aws:iam::123456789012:role/databricks-role" # Optional: If not provided, a new role will be created

### Network
create_vpc = true # Set to false if you want to use existing VPC

# If create_vpc = false, specify existing resources
# aws_vpc_name = "existing-vpc"
# aws_subnet_public_name = "existing-public-subnet"
# aws_subnet_private_name = "existing-private-subnet"
# aws_subnet_service_name = "existing-service-subnet"
# aws_security_group_name = "existing-sg"

### Network CIDRs
aws_vpc_cidr = "10.0.0.0/16"
aws_vpc_cidr_newbits = 8

# Optional: Specify exact CIDRs for subnets
# aws_subnet_public_cidrs = ["10.0.1.0/24", "10.0.2.0/24"]
# aws_subnet_private_cidrs = ["10.0.3.0/24", "10.0.4.0/24"]
# aws_subnet_service_cidrs = ["10.0.5.0/24", "10.0.6.0/24"]

### Private Link
enable_private_link = false # Set to true to enable AWS PrivateLink

### Tags
tags = {
  Environment = "dev"
  Project     = "databricks"
}

### Availability Zones
# Optional: Specify availability zones
# availability_zones = ["us-west-2a", "us-west-2b"]

### Storage Configuration
# Whether to create a new S3 bucket for Databricks root storage
create_root_bucket = true

# Name of the S3 bucket for Databricks root storage
# If not specified, a name will be auto-generated
# root_bucket_name = "my-databricks-root-bucket"

# Name for the Databricks storage configuration
# If not specified, a name will be auto-generated
# storage_configuration_name = "my-storage-config"

### Metastore Configuration
# Unity Catalog metastore name to assign to the workspace
# If not specified, no metastore will be assigned
# metastore = "my-metastore"